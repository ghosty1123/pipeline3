name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        working-directory: ./path-to-your-directory # Update this path if necessary
        run: npm install

      - name: Build project
        working-directory: ./path-to-your-directory # Update this path if necessary
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./path-to-your-directory/build/ # Update this path if necessary

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        working-directory: ./path-to-your-directory # Update this path if necessary
        run: npm install

      - name: Run tests
        working-directory: ./path-to-your-directory # Update this path if necessary
        run: npm test

      - name: Run code analysis
        working-directory: ./path-to-your-directory # Update this path if necessary
        run: npm run lint

      - name: Code coverage
        working-directory: ./path-to-your-directory # Update this path if necessary
        run: npm run coverage

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Insert your deployment script or commands here
          # Example: 
          # scp -r ./path-to-your-directory/build user@staging-server:/path/to/deploy

  notify:
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: failure()

    steps:
      - name: Send notification
        run: |
          echo "Sending failure notification..."
          echo "Notification would be sent here if configured."
          # Using a mock URL to simulate sending a request
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build or deployment failed. Please check the CI/CD pipeline."}' http://example.com/mock-webhook
